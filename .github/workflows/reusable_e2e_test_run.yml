name: Reusable E2E Test Run

on:
  workflow_call:
    inputs:
      suite:
        default: all
        type: string
      browser:
        default: chrome
        type: string
      report:
        default: no
        type: string

jobs:
  reusable_e2e_test_run:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    concurrency: e2e_test_run

    steps:
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Add Github Actions IP to Security group
        run: |
          echo "${{ steps.ip.outputs.ipv4 }}"
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_VPC_SG_ID }} --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Dump context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"

      - name: Checkout repo
        uses: actions/checkout@master

      - name: Generate .env
        run: |
          cat << EOF > .env
          ONE_LOGIN_SANDBOX_BASE_URL=${{ secrets.ONE_LOGIN_SANDBOX_BASE_URL }}
          ONE_LOGIN_SANDBOX_USERNAME=${{ secrets.ONE_LOGIN_SANDBOX_USERNAME }}
          ONE_LOGIN_SANDBOX_PASSWORD=${{ secrets.ONE_LOGIN_SANDBOX_PASSWORD }}
          APPLICATION_BASE_URL=${{ secrets.APPLICATION_BASE_URL }}
          ONE_LOGIN_APPLICANT_EMAIL=${{ secrets.ONE_LOGIN_APPLICANT_EMAIL }}
          ONE_LOGIN_APPLICANT_PASSWORD=${{ secrets.ONE_LOGIN_APPLICANT_PASSWORD }}
          ONE_LOGIN_ADMIN_EMAIL=${{ secrets.ONE_LOGIN_ADMIN_EMAIL }}
          ONE_LOGIN_ADMIN_PASSWORD=${{ secrets.ONE_LOGIN_ADMIN_PASSWORD }}
          ONE_LOGIN_SUPER_ADMIN_EMAIL=${{ secrets.ONE_LOGIN_SUPER_ADMIN_EMAIL }}
          ONE_LOGIN_SUPER_ADMIN_PASSWORD=${{ secrets.ONE_LOGIN_SUPER_ADMIN_PASSWORD }}
          CYPRESS_USERS_DATABASE_URL =${{ secrets.CYPRESS_USERS_DATABASE_URL }}
          CYPRESS_USERS_DATABASE_NAME=${{ secrets.CYPRESS_USERS_DATABASE_NAME }}
          CYPRESS_APPLY_DATABASE_URL =${{ secrets.CYPRESS_APPLY_DATABASE_URL }}
          CYPRESS_APPLY_DATABASE_NAME=${{ secrets.CYPRESS_APPLY_DATABASE_NAME }}
          CONTENTFUL_SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN=${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT_ID=${{ secrets.CONTENTFUL_ENVIRONMENT_ID }}
          EOF

      - name: Setup node
        uses: actions/setup-node@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Cache dependencies
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            ${{ steps.npm-cache-dir-path.outputs.dir }}
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Run Tests
        run: |
          npm run cy:run:${{ inputs.suite }} -- --browser ${{ inputs.browser }}

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_VPC_SG_ID }} --protocol tcp --port 5432 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        if: always()

      - name: Upload Report to S3
        run: |
          aws s3 cp /home/runner/work/gap-automated-tests/gap-automated-tests/mochawesome-report/ s3://gap-automated-tests --recursive --exclude "*" --include "*.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        if: ${{ inputs.report == 'yes' }}

      - name: Presign S3 report for sharing
        run: |  
          FILENAME=$(echo mochawesome-report/*.html\([1]\) | sed -e "s/^"mochawesome-report"//")
          aws s3 presign s3://gap-automated-tests$FILENAME --expires-in 604800
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        if: ${{ inputs.report == 'yes' }}
